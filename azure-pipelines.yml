# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
   
  imageRepository: 'testhub-api'
  containerRegistry: 'testhubio.azurecr.io'  
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        arguments: '--logger "junit;LogFilePath=TestResults/th-test-results.xml" --filter  TestCategory!=Integration --collect:"XPlat Code Coverage"'  
        projects: 'TestsHub.sln'
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/th-test-results.xml'
        mergeTestResults: true

    - task: UsePythonVersion@0
      condition: succeededOrFailed()
      inputs:
        versionSpec: '3.x'
        addToPath: true
        architecture: 'x64'
    
    - task: Bash@3
      condition: succeededOrFailed()
      inputs:
        targetType: 'inline'
        script: |
          python -m pip install --upgrade pip
          pip install requests          
          
    - task: PythonScript@0
      displayName: Upload test results to testhub
      continueOnError: true
      condition: succeededOrFailed()
      inputs:
        scriptSource: 'filePath'
        scriptPath: 'upload-test-results.py'
        arguments: '--file th-test-results.xml --org test-hub --project testhub-api --build $(Build.BuildNumber) --coverage coverage.cobertura.xml --branch $(Build.SourceBranchName)' --token 6754ad18cd53c84a34118dcb7ac915d2cbcb9f36

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: '$(Build.SourcesDirectory)/TestsHub.Api/Dockerfile'
        containerRegistry: 'testhub-registry-connection'
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
          latest

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Pay-As-You-Go(1e321cad-92ae-4632-a2f1-f596e0a060a9)'
        appType: 'webAppContainer'
        WebAppName: 'test-hub-api'
        DockerNamespace: '$(containerRegistry)'
        DockerRepository: '$(imageRepository)'
        DockerImageTag: '$(tag)'

